let m = Map()

println(m) # expect: Map()
println(m.size()) # expect: 0
println(m.is_empty?()) # expect: true

# set
m.set("key", 1)
println m # expect: Map("key" => 1)
println m.size() # expect: 1

# get
println m.get("key") # expect: 1

# getting an undefined index
println m.get("undefined") # expect: nil

let m2 = Map(1.0, 2)
let m3 = m.merge(m2)
println m3 # expect: Map("key" => 1, 1.0 => 2)

m2.set(1.0, 3)

# merging doesn't keep the reference
println m3 # expect: Map("key" => 1, 1.0 => 2)

# merging overwrites same keys
println m3.merge(Map("key", 2)) # expect: Map("key" => 2, 1.0 => 2)

m.merge(1) # error: [line 30] Runtime error: I was expecting a Map, but got Integer.
